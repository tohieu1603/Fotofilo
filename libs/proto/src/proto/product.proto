syntax = "proto3";

package product;

service ProductService {
  rpc CreateProduct (CreateProductRequest) returns (CreateProductResponse);
  rpc GetProduct (GetProductRequest) returns (GetProductResponse);
  rpc GetProducts (GetAllProductsRequest) returns (GetAllProductsResponse);  
  rpc ValidateSkuInputs (ValidateSkuInputRequest) returns (ValidateSkuInputResponse);
  rpc UpdateProduct (UpdateProductRequest) returns (UpdateProductResponse);
  rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductResponse);
  rpc existingSku (CheckSkuAvailabilityRequest) returns (CheckSkuAvailabilityResponse);
}

message CheckSkuAvailabilityRequest {
  string skuId = 1;      
  int32 quantity = 2;     
}

message CheckSkuAvailabilityResponse {
  bool exists = 1;
  bool inStock = 2;
  int32 availableStock = 3;
  string message = 4;
  string productId = 5;
  string skuCode = 6;
  double price = 7;
  string productName = 8;
  string description = 9;
  string image = 10;
  string brandId = 11;
  string categoryId = 12;
  repeated SkuOptionResponse skuOptions = 13;
}

// ======================= Create Product =======================
message CreateProductRequest {
  string name = 1;
  string description = 2;
  string brandId = 3;
  string categoryId = 4;
  repeated CreateSkuInput skus = 5;
}

message CreateSkuInput {
  string skuCode = 1;
  double price = 2;
  int32 stock = 3;
  string image = 4;
  repeated AttributeInput attributes = 5;
}

message AttributeInput {
  string attributeOptionId = 1;
}

message CreateProductResponse {
  GetProductResponse product = 1;
}

// ======================= Get Product =======================
message GetProductRequest {
  string id = 1;
  optional string userId = 2;
}

message GetProductResponse {
  string id = 1;
  string name = 2;
  string description = 3;
  string brandId = 4;
  string categoryId = 5;
  repeated SkuResponse skus = 6;
}

message GetProductSkuRequest {
  string id = 1;
}

message ListSkuRequest {
  repeated string skuIds = 1;
}

message ListSkuResponse {
  repeated SkuResponse skus = 1;
}

message GetProductSkuResponse {
  string id = 1;
  string name = 2;
  string description = 3;
  string brandId = 4;
  string categoryId = 5;
  repeated SkuResponse skus = 6;
}

// ======================= Update Product =======================
message UpdateProductRequest {
  string id = 1;
  string name = 2;
  string description = 3;
  string brandId = 4;
  string categoryId = 5;
  repeated CreateSkuInput skus = 6; // reuse input from Create
}

message UpdateProductResponse {
  GetProductResponse product = 1;
}

// ======================= Delete Product =======================
message DeleteProductRequest {
  string id = 1;
}

message DeleteProductResponse {
  bool message = 1;
}

// ======================= Get All Products =======================
message GetAllProductsRequest {
  int32 page = 1;
  int32 limit = 2;
  string keyword = 3;
  string brandId = 4;
  string categoryId = 5;
  string sort = 6; 
}

message GetAllProductsResponse {
  repeated GetProductResponse products = 1;
  int32 total = 2;
  int32 page = 3;        
  int32 limit = 4;       
  int32 totalPages = 5;  
}

message SkuResponse {
  string id = 1;
  string skuCode = 2;
  double price = 3;
  int32 stock = 4;
  string image = 5;
  repeated SkuOptionResponse skuOptions = 6;
}

message SkuOptionResponse {
  string attributeOptionId = 1;
  string attributeOptionValue = 2;
  AttributeDetail attribute = 3;
}

message AttributeDetail {
  string id = 1;
  string name = 2;
  string description = 3;
}

message SkuValidationInput {
  string productId = 1;
  string skuId = 2;
  string skuCode = 3;
  int32 quantity = 4;
}

message ValidateSkuInputRequest {
  repeated SkuValidationInput items = 1;
}

message SkuValidationResult {
  // Thông tin sản phẩm
  string productId = 1;
  string name = 2;
  string description = 3;
  string brandId = 4;
  string categoryId = 5;

  string skuId = 6;
  string skuCode = 7;
  double price = 8;
  int32 stock = 9;
  string image = 10;
  repeated SkuOptionResponse skuOptions = 11;

  // Trạng thái kiểm tra
  bool valid = 12;
  bool inStock = 13;
  int32 availableStock = 14;
  string message = 15;
}

message ValidateSkuInputResponse {
  bool allValid = 1;
  repeated SkuValidationResult results = 2;
}
